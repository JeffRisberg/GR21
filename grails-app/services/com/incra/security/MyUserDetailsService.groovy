package com.incra.security;

import org.springframework.dao.DataAccessException
import org.springframework.security.core.GrantedAuthority
import org.springframework.security.core.authority.GrantedAuthorityImpl
import org.springframework.security.core.userdetails.UserDetails
import org.springframework.security.core.userdetails.UserDetailsService
import org.springframework.security.core.userdetails.UsernameNotFoundException

import com.incra.User

/**
 * Fetches user information for use by the Spring Security library. Designed to
 * match the definitions of the User and Role class generated by the
 * s2-quickstart script in Spring Security plugin.
 * 
 * @author Jeff Risberg
 * @since February 2011
 */
public class MyUserDetailsService implements UserDetailsService {

  /**
   * Create a subclass of UserDetails for this username
   */
  UserDetails loadUserByUsername(String userId) throws UsernameNotFoundException, DataAccessException {
    User.withTransaction {
      User user = User.findByUserId(userId)

      if (user) {
        GrantedAuthority[] authorities = loadAuthorities(user, userId)

        return new MyUserDetails(
        userId, user.password, true,
        true, true, true, authorities as List, user.id)
      } else {
        throw new UsernameNotFoundException("No user with login: ${username} found")
      }
    }
  }

  /**
   * Support method to find the roles for this user.
   */
  protected GrantedAuthority[] loadAuthorities(User user, String username) {

    return new GrantedAuthorityImpl("Primary")
  }
}
